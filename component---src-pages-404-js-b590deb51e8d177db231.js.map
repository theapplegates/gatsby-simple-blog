{"version":3,"file":"component---src-pages-404-js-b590deb51e8d177db231.js","mappings":"yMAaMA,EAAM,YAAkD,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC1CC,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAeAE,GAASC,EAAAA,EAAAA,MAATD,KAEFE,EAAkBR,GAAeI,EAAKK,aAAaT,YAEzD,OACE,gBAACU,EAAA,EAAD,CACEC,eAAgB,CACdL,KAAMA,GAAQF,EAAKK,aAAaH,MAElCH,MAAOA,EACPS,cAAa,QAAUR,EAAKK,aAAaN,MACzCF,KAAM,CACJ,CACEY,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASX,GAEX,CACEY,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASV,EAAKK,aAAaO,QAE7B,CACEH,KAAK,gBACLC,QAASX,GAEX,CACEU,KAAK,sBACLC,QAASN,IAGVS,OACCf,EAASgB,OAAS,EACd,CACEL,KAAK,WACLC,QAASZ,EAASiB,KAAT,OAEX,IAELF,OAAOhB,MAYhBF,EAAIqB,aAAe,CACjBnB,KAAM,GACNC,SAAU,GACVF,YAAa,IAGf,S,uEC3EA,UAjBqB,YAA+B,IAAnBqB,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAC/BC,EAAYF,EAAKjB,KAAKK,aAAaN,MAEzC,OACE,gBAAC,IAAD,CAAQmB,SAAUA,EAAUnB,MAAOoB,GACjC,gBAAC,IAAD,CAAKpB,OAAOqB,EAAAA,EAAAA,GAAc,eAC1B,2BAAKA,EAAAA,EAAAA,GAAc,cACnB,0BAAIA,EAAAA,EAAAA,GAAc","sources":["webpack://gatsby-simple-blog/./src/components/SEO/SEO.js","webpack://gatsby-simple-blog/./src/pages/404.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { useLang } from 'context/LanguageContext';\n\nconst SEO = function({ description, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            lang\n          }\n        }\n      }\n    `,\n  );\n\n  const { lang } = useLang();\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: lang || site.siteMetadata.lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nSEO.defaultProps = {\n  meta: [],\n  keywords: [],\n  description: '',\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport { formatMessage } from '../utils/i18n';\n\nconst NotFoundPage = function ({ data, location }) {\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={formatMessage('t404Title')} />\n      <h1>{formatMessage('t404Title')}</h1>\n      <p>{formatMessage('t404Content')}</p>\n    </Layout>\n  );\n};\n\nNotFoundPage.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"names":["SEO","description","meta","keywords","title","site","useStaticQuery","lang","useLang","metaDescription","siteMetadata","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","data","location","siteTitle","formatMessage"],"sourceRoot":""}