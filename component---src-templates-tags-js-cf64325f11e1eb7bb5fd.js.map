{"version":3,"file":"component---src-templates-tags-js-cf64325f11e1eb7bb5fd.js","mappings":"wNAgBMA,EAAS,CACbC,WAAY,CACVC,WAAY,SACZC,WAAY,IA2DhB,UAvDiB,YAQb,IAAD,IAPDC,KACuBC,EAMtB,EANCC,kBAAqBD,MAEHE,EAInB,EALCC,KACEC,aAAgBF,MAGpBG,EACC,EADDA,SAEQC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAQC,EAAAA,EAAAA,GAAc,SAE5B,OACE,gBAAC,IAAD,CAAQJ,SAAUA,EAAUH,MAAOA,EAAOQ,YAAa,CAAC,CAAEC,KAAMH,KAC9D,6BACE,gBAAC,IAAD,OAEF,gBAAC,IAAD,CAAQN,MAAOM,IACf,2BACE,0BAAKA,GACL,uBAAKI,MAAOjB,EAAOC,YAChBI,EAAMa,KAAI,SAACC,GAAD,OACT,gBAAC,IAAD,CACEC,IAAKD,EAAIE,WACTL,KAAMG,EAAIE,WACVC,MAAOH,EAAII,WACXC,IAAQb,EAAL,SAAqBc,EAAAA,EAAAA,WAAUN,EAAIE,YAAnC","sources":["webpack://gatsby-simple-blog/./src/templates/tags.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Utilities\nimport { kebabCase } from 'utils/helpers';\n\n// Components\nimport { Helmet } from 'react-helmet';\nimport { graphql } from 'gatsby';\n\nimport Layout from 'components/Layout';\nimport Tag from 'components/Tag';\nimport Bio from 'components/Bio';\nimport { useLang } from 'context/LanguageContext';\nimport { formatMessage } from 'utils/i18n';\n\nconst styles = {\n  tagListDiv: {\n    marginLeft: '1.5rem',\n    lineHeight: 3,\n  },\n};\n\nconst TagsPage = function ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n  location,\n}) {\n  const { homeLink } = useLang();\n  const tTags = formatMessage('tTags');\n\n  return (\n    <Layout location={location} title={title} breadcrumbs={[{ text: tTags }]}>\n      <aside>\n        <Bio />\n      </aside>\n      <Helmet title={tTags} />\n      <div>\n        <h1>{tTags}</h1>\n        <div style={styles.tagListDiv}>\n          {group.map((tag) => (\n            <Tag\n              key={tag.fieldValue}\n              text={tag.fieldValue}\n              count={tag.totalCount}\n              url={`${homeLink}tags/${kebabCase(tag.fieldValue)}/`}\n            />\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired,\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        lang: PropTypes.string.isRequired,\n      }),\n    }),\n  }).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default TagsPage;\n\nexport const pageQuery = graphql`\n  query TagsTotalPage($langKey: String) {\n    site {\n      siteMetadata {\n        title\n        lang\n      }\n    }\n    allMarkdownRemark(limit: 1000, filter: { fields: { langKey: { eq: $langKey } } }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n"],"names":["styles","tagListDiv","marginLeft","lineHeight","data","group","allMarkdownRemark","title","site","siteMetadata","location","homeLink","useLang","tTags","formatMessage","breadcrumbs","text","style","map","tag","key","fieldValue","count","totalCount","url","kebabCase"],"sourceRoot":""}